"""Add artist, track models and relationships

Revision ID: cc1378fb2079
Revises: 223c443aea63
Create Date: 2025-06-11 16:34:26.239120

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'cc1378fb2079'
down_revision: Union[str, None] = '223c443aea63'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema by dropping and recreating tables to align primary key types."""
    # ### Manual Migration - Dropping and Recreating Tables ###

    # Step 1: Drop tables safely using 'IF EXISTS' to handle any state
    op.execute('DROP TABLE IF EXISTS track_artist_association CASCADE')
    op.execute('DROP TABLE IF EXISTS tracks CASCADE')
    op.execute('DROP TABLE IF EXISTS releases CASCADE')
    op.execute('DROP TABLE IF EXISTS artists CASCADE')

    # Step 2: Recreate tables with the correct schema (Integer PKs)
    op.create_table('artists',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('name', sa.String(length=255), nullable=False),
        sa.Column('discogs_id', sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name'),
        sa.UniqueConstraint('discogs_id')
    )
    op.create_index(op.f('ix_artists_id'), 'artists', ['id'], unique=False)

    op.create_table('releases',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('discogs_id', sa.Integer(), nullable=False),
        sa.Column('title', sa.String(), nullable=False),
        sa.Column('year', sa.Integer(), nullable=True),
        sa.Column('label', sa.String(), nullable=True),
        sa.Column('styles', postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column('artist_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['artist_id'], ['artists.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_releases_id'), 'releases', ['id'], unique=False)
    op.create_index(op.f('ix_releases_discogs_id'), 'releases', ['discogs_id'], unique=True)

    op.create_table('tracks',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('title', sa.String(), nullable=False),
        sa.Column('position', sa.String(), nullable=True),
        sa.Column('duration', sa.String(), nullable=True),
        sa.Column('youtube_url', sa.String(), nullable=True),
        sa.Column('release_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['release_id'], ['releases.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tracks_id'), 'tracks', ['id'], unique=False)
    op.create_index(op.f('ix_tracks_release_id'), 'tracks', ['release_id'], unique=False)

    op.create_table('track_artist_association',
        sa.Column('track_id', sa.Integer(), nullable=False),
        sa.Column('artist_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['artist_id'], ['artists.id'], ),
        sa.ForeignKeyConstraint(['track_id'], ['tracks.id'], ),
        sa.PrimaryKeyConstraint('track_id', 'artist_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('tracks', sa.Column('discogs_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('tracks', sa.Column('artist_id', sa.UUID(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'tracks', type_='foreignkey')
    op.create_foreign_key(op.f('tracks_artist_id_fkey'), 'tracks', 'artists', ['artist_id'], ['id'])
    op.drop_index(op.f('ix_tracks_release_id'), table_name='tracks')
    op.drop_index(op.f('ix_tracks_id'), table_name='tracks')
    op.create_unique_constraint(op.f('tracks_id_key'), 'tracks', ['id'])
    op.create_unique_constraint(op.f('tracks_discogs_id_key'), 'tracks', ['discogs_id'])
    op.alter_column('tracks', 'id',
               existing_type=sa.Integer(),
               type_=sa.UUID(),
               existing_nullable=False,
               autoincrement=True)
    op.drop_column('tracks', 'release_id')
    op.drop_column('tracks', 'duration')
    op.drop_column('tracks', 'position')
    op.add_column('releases', sa.Column('artist', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'releases', type_='foreignkey')
    op.alter_column('releases', 'styles',
               existing_type=postgresql.ARRAY(sa.VARCHAR()),
               nullable=False)
    op.alter_column('releases', 'discogs_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('releases', 'artist_id')
    op.drop_index(op.f('ix_artists_id'), table_name='artists')
    op.create_unique_constraint(op.f('artists_id_key'), 'artists', ['id'])
    op.alter_column('artists', 'id',
               existing_type=sa.Integer(),
               type_=sa.UUID(),
               existing_nullable=False,
               autoincrement=True)
    op.drop_table('track_artist_association')
    # ### end Alembic commands ###
